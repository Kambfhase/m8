/*!
 * m8 - JavaScript Math Library - v0.1pre
 * by Kambfhase
 * released under MIT License 
 *
 * includes vice-versa by Andrea Giammarchi
 */
 (function(b,c){var a=(function(){function d(h,i,f){for(var g in h){i.call(f,h[g],g,h)}}for(var e in {toString:null}){if(e==="toString"){return d}}return(function(){for(var g="constructor.hasOwnProperty.isPrototypeOf.propertyIsEnumerable.toLocaleString.toString.valueOf".split("."),h=[],f=g.length;f--;){h[f]=['hasOwnProperty.call(o,"','")&&callback.call(self,o.',',"','",o);'].join(g[f])}return Function("hasOwnProperty",d+";return function(o,callback,self){forIn(o,callback,self);"+h.join("")+"};")(c)})()})();if(!b.defineProperty){b.defineProperty=(function(){function e(g,f){if(c.call(g,"value")){this[f]=g.value}else{if(c.call(g,"get")){this.__defineGetter__(f,g.get)}if(c.call(g,"set")){this.__defineSetter__(f,g.set)}}}function d(h,f,g){if(c.call(g,"value")){h[f]=g.value}else{if(c.call(g,"get")){h.__defineGetter__(f,g.get)}if(c.call(g,"set")){h.__defineSetter__(f,g.set)}}return h}return d})()}if(!b.defineProperties){b.defineProperties=(function(){function e(g,f){b.defineProperty(this,f,g)}function d(f,g){a(g,e,f);return f}return d})()}if(!b.create){b.create=(function(){function e(){}function d(f,g){f=new e(e.prototype=f);e.prototype=null;return g?b.defineProperties(f,g):f}return d})()}if(typeof b.keys!=="function"){b.keys=function(d){var e=[],f;for(f in d){if(c.call(d,f)){e.push(f)}}return e}}if(!b.getPrototypeOf){b.getPrototypeOf=(function(){function d(e){return e.__proto__}return{}.__proto__===b.prototype?d:function(e){if(e instanceof b&&e instanceof e.constructor){return e.constructor.prototype}}})()}if(!b.getOwnPropertyDescriptor){b.getOwnPropertyDescriptor=function(e,d){if(c.call(e,d)){return{value:e[d]}}}}})(Object,Object.prototype.hasOwnProperty);(function(){var b=this.Object,a;a=function(f){var c=function(){return c.create.apply(c,arguments)},e,d;if(f.parent){e=b.keys(f.parent);for(d=0;d<e.length;++d){c=b.defineProperty(c,e[d],b.getOwnPropertyDescriptor(f.parent,e[d]))}}c=b.defineProperties(c,f["static"]||{});c.prototype=b.create(f.parent&&f.parent.prototype||{},f.instance||{});if(!c.create){c.create=function(){return b.create(this.prototype)}}if(!c.is){c.is=function(g){return this.prototype.isPrototypeOf(g)}}return c};a=a({"static":{create:{value:a}}});window.Class=a})();var MatrixBase=(function(){var a=Class.create({parent:Array,"static":{create:{value:function(b){return this.wrap(arguments.length>1?this.rectangle.apply(this,arguments):b)},enumerable:false},wrap:{value:function(b){var d=Object.create(this.prototype),c=b.length;while(c--){d[c]=b[c].slice()}return d},enumerable:false},rectangle:{value:function(c,h,e){var g,f=c,d=h,b=[];if(e){while(f--){g=[];d=h;while(d--){g[d]=e}b[f]=g}}else{while(f--){g=[];g.length=h;b[f]=g}}return b},enumerable:false},deepArrayCopy:{value:function(b){if(Array.prototype.isPrototypeOf(b)||b.map){return b.map(this.deepArrayCopy,this)}else{return b}}},sameDimensions:{value:function(){var c=arguments.length-1,d=arguments[c].length,b=arguments[c][0].length;while(c--){if(d!==arguments[c].length||b!==arguments[c][0].length){return false}}return true}},precision:{value:0.000001},},instance:{copy:{value:function(){return MatrixBase.create(MatrixBase.deepArrayCopy(this))},enumerable:false,},toArray:{value:function(){return this.slice()},enumerable:false},toString:{value:function(){return JSON.stringify(this.toArray())},enumerable:false},length:{value:0},transpose:{value:function(){var c,d=this[0].length,b=this.length,e=[];while(d--){c=b;e[d]=[];while(c--){e[d][c]=this[c][d]}}return e},enumerable:false},scale:{value:function(b){var e=[],d=this.length,c,f;while(d--){f=[];c=this[d].length;while(c--){f[c]=this[d][c]*b}e[d]=f}return e},enumerable:false},add:{value:function(b){var e=[],d=this.length,c,f;while(d--){f=[];c=this[d].length;while(c--){f[c]=this[d][c]+b[d][c]}e[d]=f}return e},enumerable:false},mult:{value:function(b){var g=[],e=0,d,c,f,h=b[0].length;for(;e<this.length;++e){g[e]=[];for(d=0;d<h;++d){f=0;for(c=0;c<this[e].length;++c){f+=this[e][c]*b[c][d]}g[e][d]=f}}return g},enumerable:false},equals:{value:function(b){var c=this.length;j;if(c!==b.length){return false}while(c--){j=this[c].length;if(j!==b.length){return false}while(j--){if(Math.abs(this[c][j]-b[c][j])>MatrixBase.precision){return false}}}return true},enumerable:false}}});a.prototype=(function(b){return Object.defineProperty(b,"length",{get:function(){var e=Object.keys(this),d=0,c=0;for(;d<e.length;++d){if(~~e[d]>c){c=~~e[d]}}return c+1},set:function(c){if(c>=this.length){this[c]=undefined}}})})(a.prototype);return a})();(function(c){var b,f,e,a,d=function(g){return Object.defineProperty(g,"length",{get:function(){var l=Object.keys(this),k=0,h=0;for(;k<l.length;++k){if(~~l[k]>h){h=~~l[k]}}return h+1},set:function(h){if(h>=this.length){this[h]=undefined}}})};a={create:{value:function(g){return this.wrap(arguments.length>1?this.rectangle.apply(this,arguments):g)}},isRectangular:{value:function(g){var h=1,k=g[0].length;for(;h<g.length;++h){if(g[h].length!==k){return false}}return true}},isSquare:{value:function(g){return g.length===g[0].length&&this.isRectangular(g)}},identity:{value:function(m){var g=[],l=0,h;for(;l<m;++l){g[l]=[];for(h=0;h<m;++h){g[l][h]=l===h?1:0}}return this.wrap(g)}},det:{value:function(h){var l=0,g=h.length,p=h[0].length,o=p,k;if(g===1){return h[0][0]}if(g===2){return h[0][0]*h[1][1]-h[0][1]*h[1][0]}k=h[0];while(o--){if(k[o]){l+=k[o]*(o&1?-1:1)*b.det(b.cut(h,0,o))}}return l}},cut:{value:function(g,l,k){var h=g.slice(0,l).concat(g.slice(l+1));h=h.map(function(i){return i.slice(0,k).concat(i.slice(k+1))});return h}},prototype:{value:{}}};e={copy:{value:function(){return b.wrap(b.deepArrayCopy(this.toArray()))}},add:{value:function(g){if(!b.sameDimensions(this,g)){throw new TypeError("this.add( other): Only Matrices of the same Dimensions kann be added. this: "+this.toString()+" other: "+b.prototype.toString.call(g))}return b.wrap(MatrixBase.prototype.add.call(this,g))}},scale:{value:function(g){return b.wrap(MatrixBase.prototype.scale.call(this,g))}},mult:{value:function(g){if(this[0].length!==g.length){throw new TypeError("this.mult( other): The matrices dimensions mismatch! this: "+this.toString()+" other: "+g)}return b.wrap(MatrixBase.prototype.mult.call(this,g))}},transpose:{value:function(){return b.wrap(MatrixBase.prototype.transpose.call(this))}},adjugate:{value:function(){if(!b.isSquare(this)){throw new TypeError("this.adjugate(): there is no adjugate matrix for non square matrixes. this:"+this.toString())}if(this.length===1){return this.copy()}var g=b.rectangle(this.length,this[0].length),k=0,h=0;for(;k<this.length;++k){for(h=0;h<this[0].length;++h){g[k][h]=Math.pow(-1,k+h)*b.det(b.cut(this,k,h))}}return b(g).transpose()}},invert:{value:function(){if(!b.isSquare(this)){throw new TypeError("this.invert(): there is no inverted matrix for non square matrixes. this:"+this.toString())}if(this.length===1){return b([[1/this[0][0]]])}return this.adjugate().scale(1/this.det())}},row:{value:function(g){return this[g]}},col:{value:function(g){var k=[],h=0;for(;h<this.length;h++){k[h]=this[h][g]}return k}},det:{value:function(){if(!b.isSquare(this)){return 0}return b.det(this.toArray())}},equals:{value:function(g){if(!b.sameDimensions(this,g)){return false}return MatrixBase.prototype.equals.call(this,g)}},};b=Class.create({"static":a,instance:e,parent:MatrixBase});c.Matrix=b})(window,"en");var Vector=Class.create({parent:MatrixBase,"static":{create:{value:function(a,b){return this.wrap(arguments.length>1||typeof a==="number"?this.rectangle(a,1,initial):a)},enumerable:false,}},instance:{scale:{value:function(a){return Vector.wrap(MatrixBase.prototype.scale.call(this,a))},enumerable:false,},transpose:{value:function(){return Vector.wrap(MatrixBase.prototype.transpose.call(this))},enumerable:false,},add:{value:function(a){if(this.length!==a.length){throw new TypeError("this.add( other): Vector dimensions mismatch!")}return Vector.wrap(MatrixBase.prototype.add.call(this,a))},enumerable:false,},mult:{value:function(a){return MatrixBase.wrap(MatrixBase.prototype.mult.call(this,a))},enumerable:false},magnitude:{value:function(){var b=0,a=this.length;while(a--){b+=Math.pow(this[a],2)}return Math.pow(b,1/2)},enumerable:false},dot:{value:function(a){var c=0,b=this.length;if(b!==a.length){throw new TypeError("this.dot( other): Vector dimensions mismatch!")}while(b--){c+=this[b]*a[b]}return c},enumerable:false}}});